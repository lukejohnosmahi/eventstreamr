mixin form-group-standard(label, name, type, placeholder)
  .form-group
    label.col-lg-2.col-md-3.col-sm-4.control-label= label
    .col-lg-10.col-md-9.col-sm-8
      input.form-control(type=type, name=name, placeholder=placeholder, data-bind="value: $data.#{name}")

mixin form-group-checkbox(label, name, options)
  .form-group
    span.col-lg-2.col-md-3.col-sm-4.control-label= label
    .col-lg-10.col-md-9.col-sm-8
      each option in options
        label
          input(type="checkbox", name=name, value=option, data-bind="checkedValue: '#{option}', checked: $data['#{name}']")
          |  #{option}

mixin dl-item(label, databind)
  dt=label
  dd {{ #{databind} }}
extends layout

block content
  .container
    h1= title
    p Welcome to #{title}
    hr
    
    div
      button.btn.btn-default.btn-sm.pull-right(data-toggle="collapse", data-target="#add-station", type="button", form-toggle)
        | Add Station
      h3 Stations
      .collapse#add-station
        .panel.panel-default
          .panel-heading
            h3.panel-title New Station
          .panel-body
            form.form-horizontal.data-async(role="form", data-bind="with: {roles: [], room: null, nickname: null, record_path: null}")
              legend.test-data Station Details
              mixin form-group-standard("Mac Address", "macaddress", "text", "##:##:##:##:##:##")
              mixin form-group-checkbox("Roles", "roles", ["mixer","ingest","record","stream"])
              mixin form-group-standard("Nickname", "nickname", "text", "podium camera")
              mixin form-group-standard("Room", "room", "text", "")
              mixin form-group-standard("Record Path", "record_path", "text", "")
              .form-group
                .col-lg-offset-2.col-lg-10.col-md-offset-3.col-md-9.col-sm-offset-4.col-sm-8
                  button.btn.btn-default(type="submit", data-bind="click: submitStation") Submit
      ul.list-unstyled(data-bind="foreach: {data: stations, as: 'station'}, visible: true" style="display: none;")
        div(data-bind="ifnot: station.settings.room()")
          hr
          li
            button.btn.btn-default.btn-xs.pull-right(data-bind="click: removeStation", title="Forget Station")
              small
               i.glyphicon.glyphicon-remove
            div(data-bind="with: {nickname: $data.settings.nickname || 'Nameless Station', macaddress: $data.settings.macaddress() } ")
              strong Nickname
              | 
              small(data-bind="editable: nickname, editableOptions: {pk: 'unused', name: 'unused', url: '/api/stations/' + macaddress + '/partial', params: {key: 'settings.nickname'}}")
            div(data-bind="with: {ip: $data.ip || '', macaddress: $data.settings.macaddress() } ")
              strong IP
              | 
              small(data-bind="editable: ip, editableOptions: {pk: 'unused', name: 'unused', url: '/api/stations/' + macaddress + '/partial', params: {key: 'ip'}}")
            div
              strong Mac Address
              | 
              small {{ macRewrite(settings.macaddress()) }}
            div(data-bind="with: {room: $data.settings.room || '', macaddress: $data.settings.macaddress() } ")
              strong Room
              | 
              small(data-bind="editable: room, editableOptions: {pk: 'unused', name: 'unused', url: '/api/stations/' + macaddress + '/partial', params: {key: 'settings.room'}}")
    hr
    .row.rooms(data-bind="foreach: {data: viewModel.rooms, as: 'roomId'}")
      div(data-bind="if: roomId")
        .panel.panel-default
          .panel-heading
            .btn-group.control-actions
              a.btn.btn-success.btn-xs(data-bind="click: actionStations.bind($data, roomId, 'start')") Start 
              a.btn.btn-warning.btn-xs(data-bind="click: actionStations.bind($data, roomId,'restart')") Restart
              a.btn.btn-primary.btn-xs(data-bind="click: actionStationManagers.bind($data, roomId, 'update')") Update
              a.btn.btn-danger.btn-xs(data-bind="click: actionStations.bind($data, roomId, 'stop')") Stop
              a.btn.btn-default.btn-xs(data-bind="click: actionStationManagers.bind($data, roomId, 'reboot')") Reboot
            h3.panel-title
              .fa.fa-home
              |  
              span(data-bind="text: roomId")
          .panel-body
            .row(data-bind="foreach: viewModel.stations().filter(function(item) { return roomId == item.settings.room() })")
              .col-md-4
                .panel.panel-primary
                  .panel-heading
                    button.btn.btn-default.btn-xs.room-remove(data-bind="click: removeStationRoom", title="Forget Room")
                      small
                       i.glyphicon.glyphicon-remove
                    .btn-group.control-actions
                        a.btn.btn-success.btn-xs(data-bind="click: actionDevice.bind($data, $data.settings.macaddress(), 'all', 'start')") Start 
                        a.btn.btn-warning.btn-xs(data-bind="click: actionDevice.bind($data, $data.settings.macaddress(), 'all', 'restart')") Restart
                        a.btn.btn-primary.btn-xs(data-bind="click: actionStationManager.bind($data, $data.settings.macaddress(), 'update')") Update
                        a.btn.btn-danger.btn-xs(data-bind="click: actionDevice.bind($data, $data.settings.macaddress(), 'all', 'stop')") Stop
                        a.btn.btn-default.btn-xs(data-bind="click: actionStationManager.bind($data, $data.settings.macaddress(), 'reboot')") Reboot
                    h2.panel-title
                      div(data-bind="with: {nickname: $data.settings.nickname || '', macaddress: $data.settings.macaddress() } ")
                        .fa.fa-desktop
                        |  
                        span(data-bind="editable: nickname, editableOptions: {pk: 'unused', name: 'unused', url: '/api/stations/' + macaddress + '/partial', params: {key: 'settings.nickname'}}")
                  .panel-body
                    dl(data-bind="with: {more: ko.observable(false)}")
                      dt
                        button.btn.btn-xs.btn-default.pull-right(data-bind="click: function(data) {data.more(!data.more());}") 
                          span(data-bind="text: (more() ? 'Show less' : 'Show more')")
                        | Room
                      dd
                        div(data-bind="editable: $parent.settings.room, editableOptions: {pk: 'unused', name: 'unused', url: '/api/stations/' + $parent.settings.macaddress() + '/partial', params: {key: 'settings.room'}}")
                      // ko if: more
                      dt Stream
                      dd
                        dl(style="margin-left: 10px;margin-top: 0px;" )
                          dt Host
                          dd(data-bind="with: {host: $parent.settings.stream.host || '', macaddress: $parent.settings.macaddress() } ")
                            div(data-bind="editable: host, editableOptions: {pk: 'unused', name: 'unused', url: '/api/stations/' + macaddress + '/partial', params: {key: 'settings.stream.host'}}")
                          dt Password
                          dd(data-bind="with: {password: $parent.settings.stream.password || '', macaddress: $parent.settings.macaddress() } ")
                            div(data-bind="editable: password, editableOptions: {pk: 'unused', name: 'unused', url: '/api/stations/' + macaddress + '/partial', params: {key: 'settings.stream.password'}}")
                          dt Port
                          dd(data-bind="with: {port: $parent.settings.stream.port || '', macaddress: $parent.settings.macaddress() } ")
                            div(data-bind="editable: port, editableOptions: {pk: 'unused', name: 'unused', url: '/api/stations/' + macaddress + '/partial', params: {key: 'settings.stream.port'}}")
                          dt Stream
                          dd(data-bind="with: {stream: $parent.settings.stream.stream || '', macaddress: $parent.settings.macaddress() } ")
                            div(data-bind="editable: stream, editableOptions: {pk: 'unused', name: 'unused', url: '/api/stations/' + macaddress + '/partial', params: {key: 'settings.stream.stream'}}")
                      dt Mixer
                      dd
                        dl(style="margin-left: 10px;margin-top: 0px;" )
                          dt Host
                          dd(data-bind="with: {host: $parent.settings.mixer.host || '', macaddress: $parent.settings.macaddress() } ")
                            div(data-bind="editable: host, editableOptions: {pk: 'unused', name: 'unused', url: '/api/stations/' + macaddress + '/partial', params: {key: 'settings.mixer.host'}}")
                          dt Port
                          dd(data-bind="with: {port: $parent.settings.mixer.port || '', macaddress: $parent.settings.macaddress() } ")
                            div(data-bind="editable: port, editableOptions: {pk: 'unused', name: 'unused', url: '/api/stations/' + macaddress + '/partial', params: {key: 'settings.mixer.port'}}")
                          dt Standy Loop 
                          dd(data-bind="with: {loop: $parent.settings.mixer.loop || '', macaddress: $parent.settings.macaddress() } ")
                            div(data-bind="editable: loop, editableOptions: {pk: 'unused', name: 'unused', url: '/api/stations/' + macaddress + '/partial', params: {key: 'settings.mixer.loop'}}")
                      dt Record 
                      dd
                        dl(style="margin-left: 10px;margin-top: 0px;" )
                          dt Path 
                          dd(data-bind="with: {record_path: $parent.settings.record_path || '', macaddress: $parent.settings.macaddress() } ")
                            div(data-bind="editable: record_path, editableOptions: {pk: 'unused', name: 'unused', url: '/api/stations/' + macaddress + '/partial', params: {key: 'settings.record_path'}}")
                          dt Sync Remote Host 
                          dd(data-bind="with: {sync_host: $parent.settings.sync.host || '', macaddress: $parent.settings.macaddress() } ")
                            div(data-bind="editable: sync_host, editableOptions: {pk: 'unused', name: 'unused', url: '/api/stations/' + macaddress + '/partial', params: {key: 'settings.sync.host'}}")
                          dt Sync Remote Path 
                          dd(data-bind="with: {remote_path: $parent.settings.sync.path || '', macaddress: $parent.settings.macaddress() } ")
                            div(data-bind="editable: remote_path, editableOptions: {pk: 'unused', name: 'unused', url: '/api/stations/' + macaddress + '/partial', params: {key: 'settings.sync.path'}}")
                      dd
                      // /ko
                    dl(data-bind="with: {available: ko.observable(false)}")
                      dt
                        // ko if: $parent.availableDevices[0]
                        button.btn.btn-xs.btn-default.pull-right(data-bind="click: function(data) {data.available(!data.available());}") 
                          span(data-bind="text: (available() ? 'Close' : 'Available')")
                        // /ko
                        | Devices
                      dd
                        // ko if: $parent.settings.devices
                        // ko if: $parent.settings.devices() !== 'all'
                        div.row(data-bind="foreach: {data: $parent.settings.devices, as: 'device'}")
                          div.col-sm-6
                            div.panel.panel-default
                              div.panel-heading
                                button.btn.btn-default.btn-xs.room-remove(data-bind="click: removeDevice.bind($data, $parents[1].settings.devices(), $parents[1].settings.macaddress(), id())", title="Remove Device", type="button")
                                  small
                                    i.glyphicon.glyphicon-remove
                                div.control-actions.btn-group
                                  a.btn.btn-success.btn-xs(data-bind="click: actionDevice.bind($data, $parents[1].settings.macaddress(), id, 'start')") Start
                                  a.btn.btn-warning.btn-xs(data-bind="click: actionDevice.bind($data, $parents[1].settings.macaddress(), id, 'restart')") Restart
                                  a.btn.btn-danger.btn-xs(data-bind="click: actionDevice.bind($data, $parents[1].settings.macaddress(), id, 'stop')") Stop
                              div.panel-body 
                                small {{name}}
                        // /ko
                        // /ko
                      // ko if: available
                      dt Available Devices
                      dd
                        ul.list-unstyled
                          div(data-bind="foreach: {data: $parent.availableDevices, as: 'availableDevice'}")
                            li
                              small(data-bind="click: availableDeviceClick.bind($data, availableDevice, $parents[1].settings.devices || [], $parents[1].settings.macaddress)") {{availableDevice.name}}
                      // /ko
                      dt Roles
                      dd(data-bind="with: {roles: $parent.settings.roles || [], macaddress: $parent.settings.macaddress()}")
                        div(data-bind="editable: roles, editableOptions: {display: roleDisplay, type: 'checklist', source: availableRoles, pk: 'unused', name: 'unused', url: '/api/stations/' + macaddress + '/partial', params: {key: 'settings.roles'}}")
                      dt Status 
                      dd
                        ul.list-unstyled
                          div(data-bind="foreach: {data: $parent.statusArray || [], as:status}")
                            li
                              // ko if: running
                              span.glyphicon.glyphicon-thumbs-up
                              | 
                              // /ko
                              // ko if: !running
                              span.glyphicon.glyphicon-thumbs-down
                              | 
                              // /ko
                              // ko if: type == 'internal'
                              Strong {{name}}
                              | 
                              // /ko
                              // ko if: type !== 'internal'
                              Strong {{id}} 
                              | 
                              // /ko
                              // ko if: !running
                              | - 
                              small {{status}}
                              | 
                              // /ko
                              // ko if: status == 'starting'
                              span.fa.fa-spinner.fa-spin
                              | 
                              // /ko
                            //small 
                        //div(data-bind="editable: roles, editableOptions: {display: roleDisplay, type: 'checklist', source: availableRoles, pk: 'unused', name: 'unused', url: '/api/stations/' + macaddress + '/partial', params: {key: 'settings.roles'}}")
                      // p(data-bind="text: ko.toJSON($parents[1])")
